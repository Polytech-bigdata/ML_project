# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  scrape_timeout: 15s # scrape_timeout is set to the global default (10s).
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]  # Scraping Prometheus itself
    
  - job_name: "cadvisor"
    static_configs:
      - targets: ['cadvisor:8080']  # cAdvisor dans le même réseau Docker (8080 exposé sur le port 8079 de l'hôte)

  - job_name: "webapp"
    static_configs:
      - targets: ['webapp:8081']  # Le conteneur webapp expose les métriques sur le port 8081

  - job_name: "serving-api"
    static_configs:
      - targets: ['serving-api:8080']  # Le conteneur serving expose les métriques sur le port 8078

  - job_name: "reporting"
    static_configs:
      - targets: ['reporting:8082']  # Le conteneur reporting expose les métriques sur le port 8082